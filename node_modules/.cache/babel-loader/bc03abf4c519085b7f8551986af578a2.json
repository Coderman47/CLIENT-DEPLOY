{"ast":null,"code":"import axios from \"axios\";\nexport const GET_ALL_COUNTRIES = \"GET_ALL_COUNTRIES\";\nexport const GET_COUNTRY_NAME = \"GET_COUNTRY_NAME\";\nexport const GET_ACTIVITIES = \"GET_ACTIVITIES\";\nexport const GET_DETAIL = \"GET_DETAIL\";\nexport const CREATE_ACTIVITY = \"CREATE_ACTIVITY\";\nexport const FILTER_BY_CONTINENT = \"FILTER_BY_CONTINENT\";\nexport const FILTER_ACTIVITY = \"FILTER_ACTIVITY\";\nexport const ORDER_BY_NAME = \"ORDER_BY_NAME\";\nexport const ORDER_BY_POPULATION = \"ORDER_BY_POPULATION\";\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nexport function getAllCountries() {\n  return async function (dispatch) {\n    const allCountries = await axios.get(\"http://localhost:3001/countries\");\n    return dispatch({\n      type: GET_ALL_COUNTRIES,\n      payload: allCountries.data\n    });\n  };\n}\nexport function getCountryDetail(id) {\n  return async function (dispatch) {\n    const json = await axios.get(`http://localhost:3001/countries/${id}`);\n    return dispatch({\n      type: GET_DETAIL,\n      payload: json.data\n    });\n  };\n}\nexport function getNameCountry(input) {\n  return async function (dispatch) {\n    try {\n      let response = await axios.get(\"http://localhost:3001/countries?name=\" + input);\n      return dispatch({\n        type: GET_COUNTRY_NAME,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function getActivities() {\n  return async function (dispatch) {\n    const info = await axios.get(\"http://localhost:3001/activities\");\n    return dispatch({\n      type: GET_ACTIVITIES,\n      payload: info.data\n    });\n  };\n}\nexport function createActivity(payload) {\n  return async function (dispatch) {\n    try {\n      const json = await axios.post(\"http://localhost:3001/activities\", payload);\n      return dispatch({\n        type: CREATE_ACTIVITY,\n        payload: payload\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function filterCountriesByContinent(payload) {\n  return {\n    type: FILTER_BY_CONTINENT,\n    payload\n  };\n}\nexport function filterActivity(payload) {\n  return {\n    type: FILTER_ACTIVITY,\n    payload\n  };\n}\nexport function orderByName(payload) {\n  return {\n    type: ORDER_BY_NAME,\n    payload\n  };\n}\nexport function orderByPopulation(payload) {\n  return {\n    type: ORDER_BY_POPULATION,\n    payload\n  };\n}\nexport function setCurrentPage(payload) {\n  return {\n    type: SET_CURRENT_PAGE,\n    payload\n  };\n}","map":{"version":3,"names":["axios","GET_ALL_COUNTRIES","GET_COUNTRY_NAME","GET_ACTIVITIES","GET_DETAIL","CREATE_ACTIVITY","FILTER_BY_CONTINENT","FILTER_ACTIVITY","ORDER_BY_NAME","ORDER_BY_POPULATION","SET_CURRENT_PAGE","getAllCountries","dispatch","allCountries","get","type","payload","data","getCountryDetail","id","json","getNameCountry","input","response","error","console","log","getActivities","info","createActivity","post","filterCountriesByContinent","filterActivity","orderByName","orderByPopulation","setCurrentPage"],"sources":["C:/Users/askin/Desktop/client/src/redux/actions/index.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const GET_ALL_COUNTRIES = \"GET_ALL_COUNTRIES\";\r\nexport const GET_COUNTRY_NAME = \"GET_COUNTRY_NAME\";\r\nexport const GET_ACTIVITIES = \"GET_ACTIVITIES\";\r\nexport const GET_DETAIL = \"GET_DETAIL\";\r\nexport const CREATE_ACTIVITY = \"CREATE_ACTIVITY\";\r\nexport const FILTER_BY_CONTINENT = \"FILTER_BY_CONTINENT\";\r\nexport const FILTER_ACTIVITY = \"FILTER_ACTIVITY\";\r\nexport const ORDER_BY_NAME = \"ORDER_BY_NAME\";\r\nexport const ORDER_BY_POPULATION = \"ORDER_BY_POPULATION\";\r\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\n\r\n\r\nexport function getAllCountries() {\r\n  return async function (dispatch) {\r\n    const allCountries = await axios.get(\"http://localhost:3001/countries\");\r\n    return dispatch({ type: GET_ALL_COUNTRIES, payload: allCountries.data });\r\n  };\r\n}\r\n\r\nexport function getCountryDetail(id) {\r\n  return async function (dispatch) {\r\n    const json = await axios.get(`http://localhost:3001/countries/${id}`);\r\n\r\n    return dispatch({\r\n      type: GET_DETAIL,\r\n      payload: json.data,\r\n    });\r\n  };\r\n}\r\n\r\nexport function getNameCountry(input) {\r\n  return async function (dispatch) {\r\n    try {\r\n      let response = await axios.get(\r\n        \"http://localhost:3001/countries?name=\" + input\r\n      );\r\n      return dispatch({\r\n        type: GET_COUNTRY_NAME,\r\n        payload: response.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n\r\nexport function getActivities() {\r\n  return async function (dispatch) {\r\n    \r\n    const info = await axios.get(\"http://localhost:3001/activities\");\r\n\r\n    return dispatch({\r\n      type: GET_ACTIVITIES,\r\n      payload: info.data,\r\n    });\r\n  };\r\n}\r\n\r\nexport function createActivity(payload) {\r\n  return async function (dispatch) {\r\n    try {\r\n      const json = await axios.post(\r\n        \"http://localhost:3001/activities\",\r\n        payload\r\n      );\r\n      return dispatch({ type: CREATE_ACTIVITY, payload: payload });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n\r\nexport function filterCountriesByContinent(payload) {\r\n  return {\r\n    type: FILTER_BY_CONTINENT,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function filterActivity(payload) {\r\n  return {\r\n    type: FILTER_ACTIVITY,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function orderByName(payload) {\r\n  return {\r\n    type: ORDER_BY_NAME,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function orderByPopulation(payload) {\r\n  return {\r\n    type: ORDER_BY_POPULATION,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function setCurrentPage(payload) {\r\nreturn {\r\n  type: SET_CURRENT_PAGE,\r\n    payload,\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}