{"ast":null,"code":"import { GET_ALL_COUNTRIES, GET_COUNTRY_NAME, GET_ACTIVITIES, GET_DETAIL, CREATE_ACTIVITY, FILTER_BY_CONTINENT, FILTER_ACTIVITY, ORDER_BY_NAME, SET_CURRENT_PAGE, ORDER_BY_POPULATION } from \"../actions/index.js\";\nconst initialState = {\n  countries: [],\n  allCountries: [],\n  activities: [],\n  countryDetail: [],\n  actualPage: 1\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_ALL_COUNTRIES:\n      return {\n        ...state,\n        countries: action.payload,\n        allCountries: action.payload\n      };\n    case GET_COUNTRY_NAME:\n      return {\n        ...state,\n        countries: action.payload\n      };\n    case GET_ACTIVITIES:\n      return {\n        ...state,\n        activities: action.payload\n      };\n    case GET_DETAIL:\n      return {\n        ...state,\n        countryDetail: action.payload\n      };\n    case CREATE_ACTIVITY:\n      return {\n        ...state,\n        activities: [...state.activities, action.payload]\n      };\n    case FILTER_BY_CONTINENT:\n      const allCountries = state.allCountries;\n      const continentFiltered = action.payload === \"All\" ? allCountries : state.allCountries.filter(el => el.continent === action.payload);\n      return {\n        ...state,\n        countries: continentFiltered\n      };\n    case FILTER_ACTIVITY:\n      let filter = action.payload === \"no filter\" ? state.allCountries : state.allCountries.filter(country => {\n        const activities = country.activities.map(activity => activity.name);\n        // console.log(activities.includes(action.payload))\n\n        return activities.includes(action.payload);\n      });\n      return {\n        ...state,\n        countries: filter\n      };\n    case ORDER_BY_NAME:\n      const sortedArr = action.payload === \"default\" ? state.allCountries : action.payload === \"asc\" ? state.countries.map(e => e).sort(function (a, b) {\n        if (a.name > b.name) {\n          return 1;\n        }\n        if (b.name > a.name) {\n          return -1;\n        }\n        return 0;\n      }) : state.countries.map(e => e).sort(function (a, b) {\n        if (a.name > b.name) {\n          return -1;\n        }\n        if (b.name > a.name) {\n          return 1;\n        }\n        return 0;\n      });\n      return {\n        ...state,\n        countries: sortedArr\n      };\n    case ORDER_BY_POPULATION:\n      const sortedArr2 = action.payload === \"maxmin\" ? state.countries.map(e => e).sort(function (a, b) {\n        if (a.population > b.population) {\n          return -1;\n        }\n        if (b.population > a.population) {\n          return 1;\n        }\n        return 0;\n      }) : state.countries.map(e => e).sort(function (a, b) {\n        if (a.population > b.population) {\n          return 1;\n        }\n        if (b.population > a.population) {\n          return -1;\n        }\n        return 0;\n      });\n      return {\n        ...state,\n        countries: sortedArr2\n      };\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        actualPage: action.payload\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_ALL_COUNTRIES","GET_COUNTRY_NAME","GET_ACTIVITIES","GET_DETAIL","CREATE_ACTIVITY","FILTER_BY_CONTINENT","FILTER_ACTIVITY","ORDER_BY_NAME","SET_CURRENT_PAGE","ORDER_BY_POPULATION","initialState","countries","allCountries","activities","countryDetail","actualPage","rootReducer","state","action","type","payload","continentFiltered","filter","el","continent","country","map","activity","name","includes","sortedArr","e","sort","a","b","sortedArr2","population"],"sources":["C:/Users/askin/Desktop/client/src/redux/reducer/index.js"],"sourcesContent":["import {\r\n  GET_ALL_COUNTRIES,\r\n  GET_COUNTRY_NAME,\r\n  GET_ACTIVITIES,\r\n  GET_DETAIL,\r\n  CREATE_ACTIVITY,\r\n  FILTER_BY_CONTINENT,\r\n  FILTER_ACTIVITY,\r\n  ORDER_BY_NAME,\r\n  SET_CURRENT_PAGE,\r\n  ORDER_BY_POPULATION\r\n} from \"../actions/index.js\";\r\n\r\nconst initialState = {\r\n  countries: [],\r\n  allCountries: [],\r\n  activities: [],\r\n  countryDetail: [],\r\n  actualPage: 1,\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_COUNTRIES:\r\n      return {\r\n        ...state,\r\n        countries: action.payload,\r\n        allCountries: action.payload,\r\n      };\r\n    case GET_COUNTRY_NAME:\r\n      return {\r\n        ...state,\r\n        countries: action.payload,\r\n      };\r\n    case GET_ACTIVITIES:\r\n      return {\r\n        ...state,\r\n        activities: action.payload,\r\n      };\r\n    case GET_DETAIL:\r\n      return {\r\n        ...state,\r\n        countryDetail: action.payload,\r\n      };\r\n    case CREATE_ACTIVITY:\r\n      return {\r\n        ...state,\r\n        activities: [...state.activities, action.payload],\r\n      };\r\n\r\n    case FILTER_BY_CONTINENT:\r\n      const allCountries = state.allCountries;\r\n      const continentFiltered =\r\n        action.payload === \"All\"\r\n          ? allCountries\r\n          : state.allCountries.filter((el) => el.continent === action.payload);\r\n      return {\r\n        ...state,\r\n        countries: continentFiltered\r\n      };\r\n    case FILTER_ACTIVITY:\r\n        let filter =\r\n          action.payload === \"no filter\"\r\n            ? state.allCountries\r\n            : state.allCountries.filter((country) => {\r\n                const activities = country.activities.map(\r\n                  (activity) => activity.name\r\n                );\r\n                // console.log(activities.includes(action.payload))\r\n  \r\n                return activities.includes(action.payload);\r\n              });\r\n        return {\r\n          ...state,\r\n          countries: filter,\r\n        };\r\n    case ORDER_BY_NAME:\r\n      const sortedArr =\r\n        action.payload === \"default\"\r\n          ? state.allCountries\r\n          : action.payload === \"asc\"\r\n          ? state.countries\r\n              .map((e) => e)\r\n              .sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                  return 1;\r\n                }\r\n                if (b.name > a.name) {\r\n                  return -1;\r\n                }\r\n                return 0;\r\n              })\r\n          : state.countries\r\n              .map((e) => e)\r\n              .sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                  return -1;\r\n                }\r\n                if (b.name > a.name) {\r\n                  return 1;\r\n                }\r\n                return 0;\r\n              });\r\n      return {\r\n        ...state,\r\n        countries: sortedArr,\r\n      };\r\n    case ORDER_BY_POPULATION:\r\n      const sortedArr2 =\r\n        action.payload === \"maxmin\"\r\n          ? state.countries.map((e)=> e).sort(function (a, b) {\r\n              if (a.population > b.population) {\r\n                return -1;\r\n              }\r\n              if (b.population > a.population) {\r\n                return 1;\r\n              }\r\n              return 0;\r\n            })\r\n          : state.countries.map((e)=> e).sort(function (a, b) {\r\n              if (a.population > b.population) {\r\n                return 1;\r\n              }\r\n              if (b.population > a.population) {\r\n                return -1;\r\n              }\r\n              return 0;\r\n            });\r\n      return {\r\n        ...state,\r\n        countries: sortedArr2,\r\n      };\r\n    \r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        actualPage: action.payload,\r\n      };  \r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}